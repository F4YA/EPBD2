// <auto-generated />
using System;
using EPBD2;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace EPBD2.Migrations
{
    [DbContext(typeof(EPDbContext))]
    partial class EPDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("epbd2")
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("EPBD2.Models.AditivoApostilamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Objeto")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("objeto");

                    b.Property<int>("Sei")
                        .HasColumnType("integer")
                        .HasColumnName("sei");

                    b.Property<string>("TermoNome")
                        .HasColumnType("character varying(60)");

                    b.Property<bool>("Tipo")
                        .HasColumnType("boolean")
                        .HasColumnName("tipo");

                    b.HasKey("Id");

                    b.HasIndex("TermoNome");

                    b.ToTable("AditivosApostilamentos", "epbd2");
                });

            modelBuilder.Entity("EPBD2.Models.Alteracoes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AditivoApostilamentoId")
                        .HasColumnType("integer");

                    b.Property<string>("Atributo")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)")
                        .HasColumnName("atributo");

                    b.Property<string>("ValorAntigo")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnName("valor_antigo");

                    b.HasKey("Id");

                    b.HasIndex("AditivoApostilamentoId");

                    b.ToTable("Alteracoes", "epbd2");
                });

            modelBuilder.Entity("EPBD2.Models.ContatoOsc", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Contato")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("character varying(120)")
                        .HasColumnName("contato");

                    b.Property<string>("OscCnpj")
                        .HasColumnType("character varying(14)");

                    b.Property<short>("Tipo")
                        .HasColumnType("smallint")
                        .HasColumnName("tipo");

                    b.HasKey("Id");

                    b.HasIndex("OscCnpj");

                    b.ToTable("ContatoOscs", "epbd2");
                });

            modelBuilder.Entity("EPBD2.Models.Edital", b =>
                {
                    b.Property<string>("Nome")
                        .HasMaxLength(60)
                        .HasColumnType("character varying(60)")
                        .HasColumnName("nome");

                    b.Property<DateTime>("DataHomologacao")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("data_homologacao");

                    b.Property<DateTime>("DataPublicacao")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("data_publicacao");

                    b.Property<DateTime>("DataResultadoDefinitivo")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("data_resultado_definitivo");

                    b.Property<DateTime?>("DataResultadoParcial")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("data_resultado_parcial");

                    b.Property<int>("NumEquipamentos")
                        .HasColumnType("integer")
                        .HasColumnName("num_equipamentos");

                    b.Property<int>("NumLotes")
                        .HasColumnType("integer")
                        .HasColumnName("num_lotes");

                    b.Property<string>("Objeto")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnName("objeto");

                    b.Property<string>("Situacao")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)")
                        .HasColumnName("situacao");

                    b.HasKey("Nome");

                    b.ToTable("Editais", "epbd2");
                });

            modelBuilder.Entity("EPBD2.Models.EmendaParlamentar", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("TermoNome")
                        .HasColumnType("character varying(60)");

                    b.Property<decimal>("Valor")
                        .HasColumnType("numeric")
                        .HasColumnName("valor");

                    b.Property<string>("VereadorCpf")
                        .HasColumnType("character varying(11)");

                    b.HasKey("Id");

                    b.HasIndex("TermoNome");

                    b.HasIndex("VereadorCpf");

                    b.ToTable("EmendaParlamentar", "epbd2");
                });

            modelBuilder.Entity("EPBD2.Models.LocalizacaoOsc", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Cep")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("character varying(8)")
                        .HasColumnName("cep");

                    b.Property<string>("Complemento")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)")
                        .HasColumnName("complemento");

                    b.Property<short>("Distrito")
                        .HasColumnType("smallint")
                        .HasColumnName("distrito");

                    b.Property<decimal?>("Latitude")
                        .HasColumnType("numeric")
                        .HasColumnName("latitude");

                    b.Property<string>("Logradouro")
                        .IsRequired()
                        .HasMaxLength(180)
                        .HasColumnType("character varying(180)")
                        .HasColumnName("logradouro");

                    b.Property<decimal?>("Longitude")
                        .HasColumnType("numeric")
                        .HasColumnName("longitude");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("character varying(5)")
                        .HasColumnName("numero");

                    b.Property<string>("OscCnpj")
                        .HasColumnType("character varying(14)");

                    b.Property<string>("Regiao")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("character varying(1)")
                        .HasColumnName("regiao");

                    b.Property<short>("Subprefeitura")
                        .HasColumnType("smallint")
                        .HasColumnName("subprefeitura");

                    b.HasKey("Id");

                    b.HasIndex("OscCnpj");

                    b.ToTable("LocalizacoesOscs", "epbd2");
                });

            modelBuilder.Entity("EPBD2.Models.LocalizacaoTermo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Cep")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("character varying(8)")
                        .HasColumnName("cep");

                    b.Property<string>("Complemento")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)")
                        .HasColumnName("complemento");

                    b.Property<short>("Distrito")
                        .HasColumnType("smallint")
                        .HasColumnName("distrito");

                    b.Property<decimal?>("Latitude")
                        .HasColumnType("numeric")
                        .HasColumnName("latitude");

                    b.Property<string>("Logradouro")
                        .IsRequired()
                        .HasMaxLength(180)
                        .HasColumnType("character varying(180)")
                        .HasColumnName("logradouro");

                    b.Property<decimal?>("Longitude")
                        .HasColumnType("numeric")
                        .HasColumnName("longitude");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("character varying(5)")
                        .HasColumnName("numero");

                    b.Property<string>("Regiao")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("character varying(1)")
                        .HasColumnName("regiao");

                    b.Property<short>("Subprefeitura")
                        .HasColumnType("smallint")
                        .HasColumnName("subprefeitura");

                    b.Property<string>("TermoNome")
                        .HasColumnType("character varying(60)");

                    b.HasKey("Id");

                    b.HasIndex("TermoNome");

                    b.ToTable("LocalizacoesTermos", "epbd2");
                });

            modelBuilder.Entity("EPBD2.Models.Osc", b =>
                {
                    b.Property<string>("Cnpj")
                        .HasMaxLength(14)
                        .HasColumnType("character varying(14)")
                        .HasColumnName("cnpj");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("character varying(120)")
                        .HasColumnName("nome");

                    b.HasKey("Cnpj");

                    b.ToTable("Oscs", "epbd2");
                });

            modelBuilder.Entity("EPBD2.Models.RepresentanteLegal", b =>
                {
                    b.Property<string>("Cpf")
                        .HasMaxLength(11)
                        .HasColumnType("character varying(11)")
                        .HasColumnName("cpf");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("character varying(120)")
                        .HasColumnName("email");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("character varying(60)")
                        .HasColumnName("nome");

                    b.Property<string>("OscCnpj")
                        .HasColumnType("character varying(14)");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("character varying(12)")
                        .HasColumnName("telefone");

                    b.HasKey("Cpf");

                    b.HasIndex("OscCnpj");

                    b.ToTable("RepresentanteLegais", "epbd2");
                });

            modelBuilder.Entity("EPBD2.Models.Termo", b =>
                {
                    b.Property<string>("TermoNome")
                        .HasMaxLength(60)
                        .HasColumnType("character varying(60)")
                        .HasColumnName("termo");

                    b.Property<DateTime?>("DataAssinatura")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("data_assinatura");

                    b.Property<DateTime?>("DataInicio")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("data_inicio");

                    b.Property<DateTime?>("DataTermino")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("data_termino");

                    b.Property<string>("EditalNome")
                        .HasColumnType("character varying(60)");

                    b.Property<string>("NomeProjeto")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnName("nome_projeto");

                    b.Property<string>("Objeto")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnName("objeto");

                    b.Property<bool?>("OrigemRecurso")
                        .HasColumnType("boolean")
                        .HasColumnName("origem_recurso");

                    b.Property<string>("OscCnpj")
                        .HasColumnType("character varying(14)");

                    b.Property<short>("QtdBeneficarios")
                        .HasColumnType("smallint")
                        .HasColumnName("qtd_beneficarios");

                    b.Property<string>("RepresentanteLegalCpf")
                        .HasColumnType("character varying(11)");

                    b.Property<int?>("SeiPagamento")
                        .HasColumnType("integer")
                        .HasColumnName("sei_pagamento");

                    b.Property<string>("TipoContrato")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)")
                        .HasColumnName("tipo_contrato");

                    b.Property<decimal?>("ValorTotal")
                        .HasColumnType("numeric")
                        .HasColumnName("valor_total");

                    b.HasKey("TermoNome");

                    b.HasIndex("EditalNome");

                    b.HasIndex("OscCnpj");

                    b.HasIndex("RepresentanteLegalCpf");

                    b.ToTable("Termos", "epbd2");
                });

            modelBuilder.Entity("EPBD2.Models.Vereador", b =>
                {
                    b.Property<string>("Cpf")
                        .HasMaxLength(11)
                        .HasColumnType("character varying(11)")
                        .HasColumnName("cpf");

                    b.Property<string>("Contato")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("contato");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("character varying(60)")
                        .HasColumnName("nome");

                    b.HasKey("Cpf");

                    b.ToTable("Vereador", "epbd2");
                });

            modelBuilder.Entity("EPBD2.Models.AditivoApostilamento", b =>
                {
                    b.HasOne("EPBD2.Models.Termo", "Termo")
                        .WithMany("AditivosApostilamentos")
                        .HasForeignKey("TermoNome");

                    b.Navigation("Termo");
                });

            modelBuilder.Entity("EPBD2.Models.Alteracoes", b =>
                {
                    b.HasOne("EPBD2.Models.AditivoApostilamento", "AditivoApostilamento")
                        .WithMany("Alteracoes")
                        .HasForeignKey("AditivoApostilamentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AditivoApostilamento");
                });

            modelBuilder.Entity("EPBD2.Models.ContatoOsc", b =>
                {
                    b.HasOne("EPBD2.Models.Osc", "Osc")
                        .WithMany("ContatosOsc")
                        .HasForeignKey("OscCnpj");

                    b.Navigation("Osc");
                });

            modelBuilder.Entity("EPBD2.Models.EmendaParlamentar", b =>
                {
                    b.HasOne("EPBD2.Models.Termo", "Termo")
                        .WithMany("EmendasParlamentares")
                        .HasForeignKey("TermoNome");

                    b.HasOne("EPBD2.Models.Vereador", "Vereador")
                        .WithMany("EmendasParlamentares")
                        .HasForeignKey("VereadorCpf");

                    b.Navigation("Termo");

                    b.Navigation("Vereador");
                });

            modelBuilder.Entity("EPBD2.Models.LocalizacaoOsc", b =>
                {
                    b.HasOne("EPBD2.Models.Osc", "Osc")
                        .WithMany("LocalizacoesOsc")
                        .HasForeignKey("OscCnpj");

                    b.Navigation("Osc");
                });

            modelBuilder.Entity("EPBD2.Models.LocalizacaoTermo", b =>
                {
                    b.HasOne("EPBD2.Models.Termo", "Termo")
                        .WithMany("LocalizacoesTermo")
                        .HasForeignKey("TermoNome");

                    b.Navigation("Termo");
                });

            modelBuilder.Entity("EPBD2.Models.RepresentanteLegal", b =>
                {
                    b.HasOne("EPBD2.Models.Osc", "Osc")
                        .WithMany("RepresentantesLegais")
                        .HasForeignKey("OscCnpj");

                    b.Navigation("Osc");
                });

            modelBuilder.Entity("EPBD2.Models.Termo", b =>
                {
                    b.HasOne("EPBD2.Models.Edital", "Edital")
                        .WithMany("Termos")
                        .HasForeignKey("EditalNome");

                    b.HasOne("EPBD2.Models.Osc", "Osc")
                        .WithMany("Termos")
                        .HasForeignKey("OscCnpj");

                    b.HasOne("EPBD2.Models.RepresentanteLegal", "RepresentanteLegal")
                        .WithMany("Termos")
                        .HasForeignKey("RepresentanteLegalCpf");

                    b.Navigation("Edital");

                    b.Navigation("Osc");

                    b.Navigation("RepresentanteLegal");
                });

            modelBuilder.Entity("EPBD2.Models.AditivoApostilamento", b =>
                {
                    b.Navigation("Alteracoes");
                });

            modelBuilder.Entity("EPBD2.Models.Edital", b =>
                {
                    b.Navigation("Termos");
                });

            modelBuilder.Entity("EPBD2.Models.Osc", b =>
                {
                    b.Navigation("ContatosOsc");

                    b.Navigation("LocalizacoesOsc");

                    b.Navigation("RepresentantesLegais");

                    b.Navigation("Termos");
                });

            modelBuilder.Entity("EPBD2.Models.RepresentanteLegal", b =>
                {
                    b.Navigation("Termos");
                });

            modelBuilder.Entity("EPBD2.Models.Termo", b =>
                {
                    b.Navigation("AditivosApostilamentos");

                    b.Navigation("EmendasParlamentares");

                    b.Navigation("LocalizacoesTermo");
                });

            modelBuilder.Entity("EPBD2.Models.Vereador", b =>
                {
                    b.Navigation("EmendasParlamentares");
                });
#pragma warning restore 612, 618
        }
    }
}
